{"ast":null,"code":"import _createForOfIteratorHelper from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _regeneratorRuntime from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromArray, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl } from \"tsparticles-engine\";\n\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n  if (modeValue >= optionsValue) {\n    var value = particleValue + (modeValue - optionsValue) * ratio;\n    return clamp(value, particleValue, modeValue);\n  } else if (modeValue < optionsValue) {\n    var _value = particleValue - (optionsValue - modeValue) * ratio;\n\n    return clamp(_value, modeValue, particleValue);\n  }\n}\n\nexport var Bubbler = /*#__PURE__*/function (_ExternalInteractorBa) {\n  _inherits(Bubbler, _ExternalInteractorBa);\n\n  var _super = _createSuper(Bubbler);\n\n  function Bubbler(container) {\n    var _this;\n\n    _classCallCheck(this, Bubbler);\n\n    _this = _super.call(this, container);\n\n    if (!container.bubble) {\n      container.bubble = {};\n    }\n\n    _this.handleClickMode = function (mode) {\n      if (mode !== \"bubble\") {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      container.bubble.clicking = true;\n    };\n\n    return _this;\n  }\n\n  _createClass(Bubbler, [{\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouse = container.interactivity.mouse,\n          events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events,\n          divs = events.onDiv,\n          divBubble = isDivModeEnabled(\"bubble\", divs);\n\n      if (!(divBubble || events.onHover.enable && mouse.position || events.onClick.enable && mouse.clickPosition)) {\n        return false;\n      }\n\n      var hoverMode = events.onHover.mode;\n      var clickMode = events.onClick.mode;\n      return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset(particle) {\n      particle.bubble.inRange = false;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear(particle, force) {\n      if (particle.bubble.inRange && !force) {\n        return;\n      }\n\n      delete particle.bubble.div;\n      delete particle.bubble.opacity;\n      delete particle.bubble.radius;\n      delete particle.bubble.color;\n    }\n  }, {\n    key: \"interact\",\n    value: function () {\n      var _interact = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var _this2 = this;\n\n        var options, events, onHover, onClick, hoverEnabled, hoverMode, clickEnabled, clickMode, divs;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n\n                if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n                  this.hoverBubble();\n                } else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n                  this.clickBubble();\n                } else {\n                  divModeExecute(\"bubble\", divs, function (selector, div) {\n                    return _this2.singleSelectorHover(selector, div);\n                  });\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function interact() {\n        return _interact.apply(this, arguments);\n      }\n\n      return interact;\n    }()\n  }, {\n    key: \"singleSelectorHover\",\n    value: function singleSelectorHover(selector, div) {\n      var _this3 = this;\n\n      var container = this.container,\n          selectors = document.querySelectorAll(selector);\n\n      if (!selectors.length) {\n        return;\n      }\n\n      selectors.forEach(function (item) {\n        var elem = item,\n            pxRatio = container.retina.pixelRatio,\n            pos = {\n          x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n          y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio\n        },\n            repulseRadius = elem.offsetWidth / 2 * pxRatio,\n            area = div.type === \"circle\" ? new Circle(pos.x, pos.y, repulseRadius) : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio),\n            query = container.particles.quadTree.query(area, function (p) {\n          return _this3.isEnabled(p);\n        });\n\n        var _iterator = _createForOfIteratorHelper(query),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var particle = _step.value;\n\n            if (!area.contains(particle.getPosition())) {\n              continue;\n            }\n\n            particle.bubble.inRange = true;\n            var divs = container.actualOptions.interactivity.modes.bubble.divs;\n            var divBubble = divMode(divs, elem);\n\n            if (!particle.bubble.div || particle.bubble.div !== elem) {\n              _this3.clear(particle, true);\n\n              particle.bubble.div = elem;\n            }\n\n            _this3.hoverBubbleSize(particle, 1, divBubble);\n\n            _this3.hoverBubbleOpacity(particle, 1, divBubble);\n\n            _this3.hoverBubbleColor(particle, 1, divBubble);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      });\n    }\n  }, {\n    key: \"process\",\n    value: function process(particle, distMouse, timeSpent, data) {\n      var container = this.container,\n          bubbleParam = data.bubbleObj.optValue;\n\n      if (bubbleParam === undefined) {\n        return;\n      }\n\n      var options = container.actualOptions,\n          bubbleDuration = options.interactivity.modes.bubble.duration,\n          bubbleDistance = container.retina.bubbleModeDistance,\n          particlesParam = data.particlesObj.optValue,\n          pObjBubble = data.bubbleObj.value,\n          pObj = data.particlesObj.value || 0,\n          type = data.type;\n\n      if (bubbleParam === particlesParam) {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      if (!container.bubble.durationEnd) {\n        if (distMouse <= bubbleDistance) {\n          var obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n\n          if (obj !== bubbleParam) {\n            var value = pObj - timeSpent * (pObj - bubbleParam) / bubbleDuration;\n\n            if (type === \"size\") {\n              particle.bubble.radius = value;\n            }\n\n            if (type === \"opacity\") {\n              particle.bubble.opacity = value;\n            }\n          }\n        } else {\n          if (type === \"size\") {\n            delete particle.bubble.radius;\n          }\n\n          if (type === \"opacity\") {\n            delete particle.bubble.opacity;\n          }\n        }\n      } else if (pObjBubble) {\n        if (type === \"size\") {\n          delete particle.bubble.radius;\n        }\n\n        if (type === \"opacity\") {\n          delete particle.bubble.opacity;\n        }\n      }\n    }\n  }, {\n    key: \"clickBubble\",\n    value: function clickBubble() {\n      var _this4 = this;\n\n      var _a, _b;\n\n      var container = this.container,\n          options = container.actualOptions,\n          mouseClickPos = container.interactivity.mouse.clickPosition;\n\n      if (!mouseClickPos) {\n        return;\n      }\n\n      if (!container.bubble) {\n        container.bubble = {};\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mouseClickPos, distance, function (p) {\n        return _this4.isEnabled(p);\n      });\n\n      var _iterator2 = _createForOfIteratorHelper(query),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var particle = _step2.value;\n\n          if (!container.bubble.clicking) {\n            continue;\n          }\n\n          particle.bubble.inRange = !container.bubble.durationEnd;\n          var pos = particle.getPosition(),\n              distMouse = getDistance(pos, mouseClickPos),\n              timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n\n          if (timeSpent > options.interactivity.modes.bubble.duration) {\n            container.bubble.durationEnd = true;\n          }\n\n          if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n            container.bubble.clicking = false;\n            container.bubble.durationEnd = false;\n          }\n\n          var sizeData = {\n            bubbleObj: {\n              optValue: container.retina.bubbleModeSize,\n              value: particle.bubble.radius\n            },\n            particlesObj: {\n              optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n              value: particle.size.value\n            },\n            type: \"size\"\n          };\n          this.process(particle, distMouse, timeSpent, sizeData);\n          var opacityData = {\n            bubbleObj: {\n              optValue: options.interactivity.modes.bubble.opacity,\n              value: particle.bubble.opacity\n            },\n            particlesObj: {\n              optValue: getRangeMax(particle.options.opacity.value),\n              value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1\n            },\n            type: \"opacity\"\n          };\n          this.process(particle, distMouse, timeSpent, opacityData);\n\n          if (!container.bubble.durationEnd) {\n            if (distMouse <= container.retina.bubbleModeDistance) {\n              this.hoverBubbleColor(particle, distMouse);\n            } else {\n              delete particle.bubble.color;\n            }\n          } else {\n            delete particle.bubble.color;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"hoverBubble\",\n    value: function hoverBubble() {\n      var _this5 = this;\n\n      var container = this.container,\n          mousePos = container.interactivity.mouse.position;\n\n      if (mousePos === undefined) {\n        return;\n      }\n\n      var distance = container.retina.bubbleModeDistance,\n          query = container.particles.quadTree.queryCircle(mousePos, distance, function (p) {\n        return _this5.isEnabled(p);\n      });\n\n      var _iterator3 = _createForOfIteratorHelper(query),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var particle = _step3.value;\n          particle.bubble.inRange = true;\n          var pos = particle.getPosition(),\n              pointDistance = getDistance(pos, mousePos),\n              ratio = 1 - pointDistance / distance;\n\n          if (pointDistance <= distance) {\n            if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n              this.hoverBubbleSize(particle, ratio);\n              this.hoverBubbleOpacity(particle, ratio);\n              this.hoverBubbleColor(particle, ratio);\n            }\n          } else {\n            this.reset(particle);\n          }\n\n          if (container.interactivity.status === mouseLeaveEvent) {\n            this.reset(particle);\n          }\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n  }, {\n    key: \"hoverBubbleSize\",\n    value: function hoverBubbleSize(particle, ratio, divBubble) {\n      var container = this.container,\n          modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n\n      if (modeSize === undefined) {\n        return;\n      }\n\n      var optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n      var pSize = particle.size.value;\n      var size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n\n      if (size !== undefined) {\n        particle.bubble.radius = size;\n      }\n    }\n  }, {\n    key: \"hoverBubbleOpacity\",\n    value: function hoverBubbleOpacity(particle, ratio, divBubble) {\n      var _a, _b, _c;\n\n      var container = this.container,\n          options = container.actualOptions,\n          modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n\n      if (!modeOpacity) {\n        return;\n      }\n\n      var optOpacity = particle.options.opacity.value;\n      var pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n      var opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n\n      if (opacity !== undefined) {\n        particle.bubble.opacity = opacity;\n      }\n    }\n  }, {\n    key: \"hoverBubbleColor\",\n    value: function hoverBubbleColor(particle, ratio, divBubble) {\n      var options = this.container.actualOptions;\n      var bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n\n      if (!particle.bubble.finalColor) {\n        var modeColor = bubbleOptions.color;\n\n        if (!modeColor) {\n          return;\n        }\n\n        var bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n        particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n      }\n\n      if (!particle.bubble.finalColor) {\n        return;\n      }\n\n      if (bubbleOptions.mix) {\n        particle.bubble.color = undefined;\n        var pColor = particle.getFillColor();\n        particle.bubble.color = pColor ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio)) : particle.bubble.finalColor;\n      } else {\n        particle.bubble.color = particle.bubble.finalColor;\n      }\n    }\n  }]);\n\n  return Bubbler;\n}(ExternalInteractorBase);","map":{"version":3,"names":["Circle","ExternalInteractorBase","Rectangle","clamp","colorMix","divMode","divModeExecute","getDistance","getRangeMax","isDivModeEnabled","isInArray","itemFromArray","mouseLeaveEvent","mouseMoveEvent","rangeColorToHsl","rgbToHsl","calculateBubbleValue","particleValue","modeValue","optionsValue","ratio","value","Bubbler","container","bubble","handleClickMode","mode","clicking","particle","_a","options","actualOptions","mouse","interactivity","events","divs","onDiv","divBubble","onHover","enable","position","onClick","clickPosition","hoverMode","clickMode","inRange","force","div","opacity","radius","color","hoverEnabled","clickEnabled","hoverBubble","clickBubble","selector","singleSelectorHover","selectors","document","querySelectorAll","length","forEach","item","elem","pxRatio","retina","pixelRatio","pos","x","offsetLeft","offsetWidth","y","offsetTop","offsetHeight","repulseRadius","area","type","query","particles","quadTree","p","isEnabled","contains","getPosition","modes","clear","hoverBubbleSize","hoverBubbleOpacity","hoverBubbleColor","distMouse","timeSpent","data","bubbleParam","bubbleObj","optValue","undefined","bubbleDuration","duration","bubbleDistance","bubbleModeDistance","particlesParam","particlesObj","pObjBubble","pObj","durationEnd","obj","_b","mouseClickPos","distance","queryCircle","Date","getTime","clickTime","sizeData","bubbleModeSize","size","process","opacityData","mousePos","pointDistance","status","reset","modeSize","optSize","pSize","_c","modeOpacity","optOpacity","pOpacity","bubbleOptions","finalColor","modeColor","bubbleColor","Array","mix","pColor","getFillColor"],"sources":["/Users/palash/web development/nazmul-portfolio/node_modules/tsparticles-interaction-external-bubble/esm/Bubbler.js"],"sourcesContent":["import { Circle, ExternalInteractorBase, Rectangle, clamp, colorMix, divMode, divModeExecute, getDistance, getRangeMax, isDivModeEnabled, isInArray, itemFromArray, mouseLeaveEvent, mouseMoveEvent, rangeColorToHsl, rgbToHsl, } from \"tsparticles-engine\";\nfunction calculateBubbleValue(particleValue, modeValue, optionsValue, ratio) {\n    if (modeValue >= optionsValue) {\n        const value = particleValue + (modeValue - optionsValue) * ratio;\n        return clamp(value, particleValue, modeValue);\n    }\n    else if (modeValue < optionsValue) {\n        const value = particleValue - (optionsValue - modeValue) * ratio;\n        return clamp(value, modeValue, particleValue);\n    }\n}\nexport class Bubbler extends ExternalInteractorBase {\n    constructor(container) {\n        super(container);\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        this.handleClickMode = (mode) => {\n            if (mode !== \"bubble\") {\n                return;\n            }\n            if (!container.bubble) {\n                container.bubble = {};\n            }\n            container.bubble.clicking = true;\n        };\n    }\n    isEnabled(particle) {\n        var _a;\n        const container = this.container, options = container.actualOptions, mouse = container.interactivity.mouse, events = ((_a = particle === null || particle === void 0 ? void 0 : particle.interactivity) !== null && _a !== void 0 ? _a : options.interactivity).events, divs = events.onDiv, divBubble = isDivModeEnabled(\"bubble\", divs);\n        if (!(divBubble || (events.onHover.enable && mouse.position) || (events.onClick.enable && mouse.clickPosition))) {\n            return false;\n        }\n        const hoverMode = events.onHover.mode;\n        const clickMode = events.onClick.mode;\n        return isInArray(\"bubble\", hoverMode) || isInArray(\"bubble\", clickMode) || divBubble;\n    }\n    reset(particle) {\n        particle.bubble.inRange = false;\n    }\n    clear(particle, force) {\n        if (particle.bubble.inRange && !force) {\n            return;\n        }\n        delete particle.bubble.div;\n        delete particle.bubble.opacity;\n        delete particle.bubble.radius;\n        delete particle.bubble.color;\n    }\n    async interact() {\n        const options = this.container.actualOptions, events = options.interactivity.events, onHover = events.onHover, onClick = events.onClick, hoverEnabled = onHover.enable, hoverMode = onHover.mode, clickEnabled = onClick.enable, clickMode = onClick.mode, divs = events.onDiv;\n        if (hoverEnabled && isInArray(\"bubble\", hoverMode)) {\n            this.hoverBubble();\n        }\n        else if (clickEnabled && isInArray(\"bubble\", clickMode)) {\n            this.clickBubble();\n        }\n        else {\n            divModeExecute(\"bubble\", divs, (selector, div) => this.singleSelectorHover(selector, div));\n        }\n    }\n    singleSelectorHover(selector, div) {\n        const container = this.container, selectors = document.querySelectorAll(selector);\n        if (!selectors.length) {\n            return;\n        }\n        selectors.forEach((item) => {\n            const elem = item, pxRatio = container.retina.pixelRatio, pos = {\n                x: (elem.offsetLeft + elem.offsetWidth / 2) * pxRatio,\n                y: (elem.offsetTop + elem.offsetHeight / 2) * pxRatio,\n            }, repulseRadius = (elem.offsetWidth / 2) * pxRatio, area = div.type === \"circle\"\n                ? new Circle(pos.x, pos.y, repulseRadius)\n                : new Rectangle(elem.offsetLeft * pxRatio, elem.offsetTop * pxRatio, elem.offsetWidth * pxRatio, elem.offsetHeight * pxRatio), query = container.particles.quadTree.query(area, (p) => this.isEnabled(p));\n            for (const particle of query) {\n                if (!area.contains(particle.getPosition())) {\n                    continue;\n                }\n                particle.bubble.inRange = true;\n                const divs = container.actualOptions.interactivity.modes.bubble.divs;\n                const divBubble = divMode(divs, elem);\n                if (!particle.bubble.div || particle.bubble.div !== elem) {\n                    this.clear(particle, true);\n                    particle.bubble.div = elem;\n                }\n                this.hoverBubbleSize(particle, 1, divBubble);\n                this.hoverBubbleOpacity(particle, 1, divBubble);\n                this.hoverBubbleColor(particle, 1, divBubble);\n            }\n        });\n    }\n    process(particle, distMouse, timeSpent, data) {\n        const container = this.container, bubbleParam = data.bubbleObj.optValue;\n        if (bubbleParam === undefined) {\n            return;\n        }\n        const options = container.actualOptions, bubbleDuration = options.interactivity.modes.bubble.duration, bubbleDistance = container.retina.bubbleModeDistance, particlesParam = data.particlesObj.optValue, pObjBubble = data.bubbleObj.value, pObj = data.particlesObj.value || 0, type = data.type;\n        if (bubbleParam === particlesParam) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        if (!container.bubble.durationEnd) {\n            if (distMouse <= bubbleDistance) {\n                const obj = pObjBubble !== null && pObjBubble !== void 0 ? pObjBubble : pObj;\n                if (obj !== bubbleParam) {\n                    const value = pObj - (timeSpent * (pObj - bubbleParam)) / bubbleDuration;\n                    if (type === \"size\") {\n                        particle.bubble.radius = value;\n                    }\n                    if (type === \"opacity\") {\n                        particle.bubble.opacity = value;\n                    }\n                }\n            }\n            else {\n                if (type === \"size\") {\n                    delete particle.bubble.radius;\n                }\n                if (type === \"opacity\") {\n                    delete particle.bubble.opacity;\n                }\n            }\n        }\n        else if (pObjBubble) {\n            if (type === \"size\") {\n                delete particle.bubble.radius;\n            }\n            if (type === \"opacity\") {\n                delete particle.bubble.opacity;\n            }\n        }\n    }\n    clickBubble() {\n        var _a, _b;\n        const container = this.container, options = container.actualOptions, mouseClickPos = container.interactivity.mouse.clickPosition;\n        if (!mouseClickPos) {\n            return;\n        }\n        if (!container.bubble) {\n            container.bubble = {};\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mouseClickPos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            if (!container.bubble.clicking) {\n                continue;\n            }\n            particle.bubble.inRange = !container.bubble.durationEnd;\n            const pos = particle.getPosition(), distMouse = getDistance(pos, mouseClickPos), timeSpent = (new Date().getTime() - (container.interactivity.mouse.clickTime || 0)) / 1000;\n            if (timeSpent > options.interactivity.modes.bubble.duration) {\n                container.bubble.durationEnd = true;\n            }\n            if (timeSpent > options.interactivity.modes.bubble.duration * 2) {\n                container.bubble.clicking = false;\n                container.bubble.durationEnd = false;\n            }\n            const sizeData = {\n                bubbleObj: {\n                    optValue: container.retina.bubbleModeSize,\n                    value: particle.bubble.radius,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.size.value) * container.retina.pixelRatio,\n                    value: particle.size.value,\n                },\n                type: \"size\",\n            };\n            this.process(particle, distMouse, timeSpent, sizeData);\n            const opacityData = {\n                bubbleObj: {\n                    optValue: options.interactivity.modes.bubble.opacity,\n                    value: particle.bubble.opacity,\n                },\n                particlesObj: {\n                    optValue: getRangeMax(particle.options.opacity.value),\n                    value: (_b = (_a = particle.opacity) === null || _a === void 0 ? void 0 : _a.value) !== null && _b !== void 0 ? _b : 1,\n                },\n                type: \"opacity\",\n            };\n            this.process(particle, distMouse, timeSpent, opacityData);\n            if (!container.bubble.durationEnd) {\n                if (distMouse <= container.retina.bubbleModeDistance) {\n                    this.hoverBubbleColor(particle, distMouse);\n                }\n                else {\n                    delete particle.bubble.color;\n                }\n            }\n            else {\n                delete particle.bubble.color;\n            }\n        }\n    }\n    hoverBubble() {\n        const container = this.container, mousePos = container.interactivity.mouse.position;\n        if (mousePos === undefined) {\n            return;\n        }\n        const distance = container.retina.bubbleModeDistance, query = container.particles.quadTree.queryCircle(mousePos, distance, (p) => this.isEnabled(p));\n        for (const particle of query) {\n            particle.bubble.inRange = true;\n            const pos = particle.getPosition(), pointDistance = getDistance(pos, mousePos), ratio = 1 - pointDistance / distance;\n            if (pointDistance <= distance) {\n                if (ratio >= 0 && container.interactivity.status === mouseMoveEvent) {\n                    this.hoverBubbleSize(particle, ratio);\n                    this.hoverBubbleOpacity(particle, ratio);\n                    this.hoverBubbleColor(particle, ratio);\n                }\n            }\n            else {\n                this.reset(particle);\n            }\n            if (container.interactivity.status === mouseLeaveEvent) {\n                this.reset(particle);\n            }\n        }\n    }\n    hoverBubbleSize(particle, ratio, divBubble) {\n        const container = this.container, modeSize = (divBubble === null || divBubble === void 0 ? void 0 : divBubble.size) ? divBubble.size * container.retina.pixelRatio : container.retina.bubbleModeSize;\n        if (modeSize === undefined) {\n            return;\n        }\n        const optSize = getRangeMax(particle.options.size.value) * container.retina.pixelRatio;\n        const pSize = particle.size.value;\n        const size = calculateBubbleValue(pSize, modeSize, optSize, ratio);\n        if (size !== undefined) {\n            particle.bubble.radius = size;\n        }\n    }\n    hoverBubbleOpacity(particle, ratio, divBubble) {\n        var _a, _b, _c;\n        const container = this.container, options = container.actualOptions, modeOpacity = (_a = divBubble === null || divBubble === void 0 ? void 0 : divBubble.opacity) !== null && _a !== void 0 ? _a : options.interactivity.modes.bubble.opacity;\n        if (!modeOpacity) {\n            return;\n        }\n        const optOpacity = particle.options.opacity.value;\n        const pOpacity = (_c = (_b = particle.opacity) === null || _b === void 0 ? void 0 : _b.value) !== null && _c !== void 0 ? _c : 1;\n        const opacity = calculateBubbleValue(pOpacity, modeOpacity, getRangeMax(optOpacity), ratio);\n        if (opacity !== undefined) {\n            particle.bubble.opacity = opacity;\n        }\n    }\n    hoverBubbleColor(particle, ratio, divBubble) {\n        const options = this.container.actualOptions;\n        const bubbleOptions = divBubble !== null && divBubble !== void 0 ? divBubble : options.interactivity.modes.bubble;\n        if (!particle.bubble.finalColor) {\n            const modeColor = bubbleOptions.color;\n            if (!modeColor) {\n                return;\n            }\n            const bubbleColor = modeColor instanceof Array ? itemFromArray(modeColor) : modeColor;\n            particle.bubble.finalColor = rangeColorToHsl(bubbleColor);\n        }\n        if (!particle.bubble.finalColor) {\n            return;\n        }\n        if (bubbleOptions.mix) {\n            particle.bubble.color = undefined;\n            const pColor = particle.getFillColor();\n            particle.bubble.color = pColor\n                ? rgbToHsl(colorMix(pColor, particle.bubble.finalColor, 1 - ratio, ratio))\n                : particle.bubble.finalColor;\n        }\n        else {\n            particle.bubble.color = particle.bubble.finalColor;\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}