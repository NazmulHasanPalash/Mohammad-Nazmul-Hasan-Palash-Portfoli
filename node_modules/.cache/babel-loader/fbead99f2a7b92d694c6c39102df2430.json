{"ast":null,"code":"import _classCallCheck from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"tsparticles-engine\";\n\nfunction updateAngle(particle, delta) {\n  var _a, _b;\n\n  var rotate = particle.rotate;\n\n  if (!rotate) {\n    return;\n  }\n\n  var rotateOptions = particle.options.rotate,\n      rotateAnimation = rotateOptions.animation,\n      speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n      max = 2 * Math.PI,\n      decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!rotateAnimation.enable) {\n    return;\n  }\n\n  switch (rotate.status) {\n    case 0:\n      rotate.value += speed;\n\n      if (rotate.value > max) {\n        rotate.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      rotate.value -= speed;\n\n      if (rotate.value < 0) {\n        rotate.value += max;\n      }\n\n      break;\n  }\n\n  if (rotate.velocity && decay !== 1) {\n    rotate.velocity *= decay;\n  }\n}\n\nexport var AngleUpdater = /*#__PURE__*/function () {\n  function AngleUpdater(container) {\n    _classCallCheck(this, AngleUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(AngleUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rotateOptions = particle.options.rotate;\n      particle.rotate = {\n        enable: rotateOptions.animation.enable,\n        value: getRangeValue(rotateOptions.value) * Math.PI / 180\n      };\n      var rotateDirection = rotateOptions.direction;\n\n      if (rotateDirection === \"random\") {\n        var index = Math.floor(Math.random() * 2);\n        rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (rotateDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.rotate.status = 1;\n          break;\n\n        case \"clockwise\":\n          particle.rotate.status = 0;\n          break;\n      }\n\n      var rotateAnimation = particle.options.rotate.animation;\n\n      if (rotateAnimation.enable) {\n        particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n        particle.rotate.velocity = getRangeValue(rotateAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!rotateAnimation.sync) {\n          particle.rotate.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var rotate = particle.options.rotate,\n          rotateAnimation = rotate.animation;\n      return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateAngle(particle, delta);\n    }\n  }]);\n\n  return AngleUpdater;\n}();","map":{"version":3,"names":["getRangeValue","updateAngle","particle","delta","_a","_b","rotate","rotateOptions","options","rotateAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","AngleUpdater","container","rotateDirection","direction","index","floor","random","retina","reduceFactor","sync","destroyed","spawning","path","isEnabled"],"sources":["/Users/palash/web development/portfolio/node_modules/tsparticles-updater-angle/esm/AngleUpdater.js"],"sourcesContent":["import { getRangeValue } from \"tsparticles-engine\";\nfunction updateAngle(particle, delta) {\n    var _a, _b;\n    const rotate = particle.rotate;\n    if (!rotate) {\n        return;\n    }\n    const rotateOptions = particle.options.rotate, rotateAnimation = rotateOptions.animation, speed = ((_a = rotate.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = rotate.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!rotateAnimation.enable) {\n        return;\n    }\n    switch (rotate.status) {\n        case 0:\n            rotate.value += speed;\n            if (rotate.value > max) {\n                rotate.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            rotate.value -= speed;\n            if (rotate.value < 0) {\n                rotate.value += max;\n            }\n            break;\n    }\n    if (rotate.velocity && decay !== 1) {\n        rotate.velocity *= decay;\n    }\n}\nexport class AngleUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        const rotateOptions = particle.options.rotate;\n        particle.rotate = {\n            enable: rotateOptions.animation.enable,\n            value: (getRangeValue(rotateOptions.value) * Math.PI) / 180,\n        };\n        let rotateDirection = rotateOptions.direction;\n        if (rotateDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            rotateDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (rotateDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.rotate.status = 1;\n                break;\n            case \"clockwise\":\n                particle.rotate.status = 0;\n                break;\n        }\n        const rotateAnimation = particle.options.rotate.animation;\n        if (rotateAnimation.enable) {\n            particle.rotate.decay = 1 - getRangeValue(rotateAnimation.decay);\n            particle.rotate.velocity =\n                (getRangeValue(rotateAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!rotateAnimation.sync) {\n                particle.rotate.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        const rotate = particle.options.rotate, rotateAnimation = rotate.animation;\n        return !particle.destroyed && !particle.spawning && !rotate.path && rotateAnimation.enable;\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAngle(particle, delta);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}