{"ast":null,"code":"import _regeneratorRuntime from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _slicedToArray from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _asyncToGenerator from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\n\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\n\nvar _Canvas_context;\n\nimport { clear as _clear, drawParticle as _drawParticle, drawParticlePlugin as _drawParticlePlugin, drawPlugin as _drawPlugin, paintBase as _paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nexport var Canvas = /*#__PURE__*/function () {\n  function Canvas(container) {\n    _classCallCheck(this, Canvas);\n\n    this.container = container;\n\n    _Canvas_context.set(this, void 0);\n\n    this.size = {\n      height: 0,\n      width: 0\n    };\n\n    __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n\n    this.generatedCanvas = false;\n  }\n\n  _createClass(Canvas, [{\n    key: \"init\",\n    value: function init() {\n      this.resize();\n      this.initStyle();\n      this.initCover();\n      this.initTrail();\n      this.initBackground();\n      this.paint();\n    }\n  }, {\n    key: \"loadCanvas\",\n    value: function loadCanvas(canvas) {\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.generatedCanvas = canvas.dataset && generatedAttribute in canvas.dataset ? canvas.dataset[generatedAttribute] === \"true\" : this.generatedCanvas;\n      this.element = canvas;\n      this.originalStyle = deepExtend({}, this.element.style);\n      this.size.height = canvas.offsetHeight;\n      this.size.width = canvas.offsetWidth;\n\n      __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n\n      this.container.retina.init();\n      this.initBackground();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _this = this;\n\n      var _a;\n\n      if (this.generatedCanvas) {\n        (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n      }\n\n      this.draw(function (ctx) {\n        _clear(ctx, _this.size);\n      });\n    }\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      var _this2 = this;\n\n      var options = this.container.actualOptions;\n      this.draw(function (ctx) {\n        if (options.backgroundMask.enable && options.backgroundMask.cover) {\n          _clear(ctx, _this2.size);\n\n          _this2.paintBase(_this2.coverColorStyle);\n        } else {\n          _this2.paintBase();\n        }\n      });\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var _this3 = this;\n\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail;\n\n      if (options.backgroundMask.enable) {\n        this.paint();\n      } else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n        this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n      } else {\n        this.draw(function (ctx) {\n          _clear(ctx, _this3.size);\n        });\n      }\n    }\n  }, {\n    key: \"windowResize\",\n    value: function () {\n      var _windowResize = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var container, needsRefresh, _iterator, _step, _step$value, plugin;\n\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (this.element) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                this.resize();\n                container = this.container, needsRefresh = container.updateActualOptions();\n                container.particles.setDensity();\n                _iterator = _createForOfIteratorHelper(container.plugins);\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    _step$value = _slicedToArray(_step.value, 2), plugin = _step$value[1];\n\n                    if (plugin.resize !== undefined) {\n                      plugin.resize();\n                    }\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n\n                if (!needsRefresh) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 10;\n                return container.refresh();\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function windowResize() {\n        return _windowResize.apply(this, arguments);\n      }\n\n      return windowResize;\n    }()\n  }, {\n    key: \"resize\",\n    value: function resize() {\n      if (!this.element) {\n        return;\n      }\n\n      var container = this.container,\n          pxRatio = container.retina.pixelRatio,\n          size = container.canvas.size,\n          newSize = {\n        width: this.element.offsetWidth * pxRatio,\n        height: this.element.offsetHeight * pxRatio\n      };\n\n      if (newSize.height === size.height && newSize.width === size.width && newSize.height === this.element.height && newSize.width === this.element.width) {\n        return;\n      }\n\n      var oldSize = Object.assign({}, size);\n      this.element.width = size.width = this.element.offsetWidth * pxRatio;\n      this.element.height = size.height = this.element.offsetHeight * pxRatio;\n\n      if (this.container.started) {\n        this.resizeFactor = {\n          width: size.width / oldSize.width,\n          height: size.height / oldSize.height\n        };\n      }\n    }\n  }, {\n    key: \"drawParticle\",\n    value: function drawParticle(particle, delta) {\n      var _this4 = this;\n\n      var _a, _b, _c, _d, _e, _f;\n\n      if (particle.spawning || particle.destroyed) {\n        return;\n      }\n\n      var radius = particle.getRadius();\n\n      if (radius <= 0) {\n        return;\n      }\n\n      var pfColor = particle.getFillColor(),\n          psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n\n      if (!pfColor && !psColor) {\n        return;\n      }\n\n      var _this$getPluginPartic = this.getPluginParticleColors(particle),\n          _this$getPluginPartic2 = _slicedToArray(_this$getPluginPartic, 2),\n          fColor = _this$getPluginPartic2[0],\n          sColor = _this$getPluginPartic2[1];\n\n      if (!fColor || !sColor) {\n        if (!fColor) {\n          fColor = pfColor ? pfColor : undefined;\n        }\n\n        if (!sColor) {\n          sColor = psColor ? psColor : undefined;\n        }\n      }\n\n      var options = this.container.actualOptions,\n          zIndexOptions = particle.options.zIndex,\n          zOpacityFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.opacityRate),\n          opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1,\n          strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity,\n          zOpacity = opacity * zOpacityFactor,\n          zStrokeOpacity = strokeOpacity * zOpacityFactor;\n      var colorStyles = {\n        fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined\n      };\n      colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n      this.draw(function (ctx) {\n        var zSizeFactor = Math.pow(1 - particle.zIndexFactor, zIndexOptions.sizeRate),\n            container = _this4.container;\n\n        var _iterator2 = _createForOfIteratorHelper(container.particles.updaters),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var updater = _step2.value;\n\n            if (updater.beforeDraw) {\n              updater.beforeDraw(particle);\n            }\n\n            if (updater.getColorStyles) {\n              var _updater$getColorStyl = updater.getColorStyles(particle, ctx, radius, zOpacity),\n                  fill = _updater$getColorStyl.fill,\n                  stroke = _updater$getColorStyl.stroke;\n\n              if (fill) {\n                colorStyles.fill = fill;\n              }\n\n              if (stroke) {\n                colorStyles.stroke = stroke;\n              }\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n\n        _drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n\n        var _iterator3 = _createForOfIteratorHelper(container.particles.updaters),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var _updater = _step3.value;\n\n            if (_updater.afterDraw) {\n              _updater.afterDraw(particle);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      });\n    }\n  }, {\n    key: \"drawPlugin\",\n    value: function drawPlugin(plugin, delta) {\n      this.draw(function (ctx) {\n        _drawPlugin(ctx, plugin, delta);\n      });\n    }\n  }, {\n    key: \"drawParticlePlugin\",\n    value: function drawParticlePlugin(plugin, particle, delta) {\n      this.draw(function (ctx) {\n        _drawParticlePlugin(ctx, plugin, particle, delta);\n      });\n    }\n  }, {\n    key: \"initBackground\",\n    value: function initBackground() {\n      var options = this.container.actualOptions,\n          background = options.background,\n          element = this.element,\n          elementStyle = element === null || element === void 0 ? void 0 : element.style;\n\n      if (!elementStyle) {\n        return;\n      }\n\n      if (background.color) {\n        var color = rangeColorToRgb(background.color);\n        elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n      } else {\n        elementStyle.backgroundColor = \"\";\n      }\n\n      elementStyle.backgroundImage = background.image || \"\";\n      elementStyle.backgroundPosition = background.position || \"\";\n      elementStyle.backgroundRepeat = background.repeat || \"\";\n      elementStyle.backgroundSize = background.size || \"\";\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(cb) {\n      if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n        return;\n      }\n\n      return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n  }, {\n    key: \"initCover\",\n    value: function initCover() {\n      var options = this.container.actualOptions,\n          cover = options.backgroundMask.cover,\n          color = cover.color,\n          coverRgb = rangeColorToRgb(color);\n\n      if (coverRgb) {\n        var coverColor = {\n          r: coverRgb.r,\n          g: coverRgb.g,\n          b: coverRgb.b,\n          a: cover.opacity\n        };\n        this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n      }\n    }\n  }, {\n    key: \"initTrail\",\n    value: function initTrail() {\n      var options = this.container.actualOptions,\n          trail = options.particles.move.trail,\n          fillColor = rangeColorToRgb(trail.fillColor);\n\n      if (fillColor) {\n        var _trail = options.particles.move.trail;\n        this.trailFillColor = {\n          r: fillColor.r,\n          g: fillColor.g,\n          b: fillColor.b,\n          a: 1 / _trail.length\n        };\n      }\n    }\n  }, {\n    key: \"getPluginParticleColors\",\n    value: function getPluginParticleColors(particle) {\n      var fColor, sColor;\n\n      var _iterator4 = _createForOfIteratorHelper(this.container.plugins),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 2),\n              plugin = _step4$value[1];\n\n          if (!fColor && plugin.particleFillColor) {\n            fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n          }\n\n          if (!sColor && plugin.particleStrokeColor) {\n            sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n          }\n\n          if (fColor && sColor) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      return [fColor, sColor];\n    }\n  }, {\n    key: \"initStyle\",\n    value: function initStyle() {\n      var element = this.element,\n          options = this.container.actualOptions;\n\n      if (!element) {\n        return;\n      }\n\n      var originalStyle = this.originalStyle;\n\n      if (options.fullScreen.enable) {\n        this.originalStyle = deepExtend({}, element.style);\n        element.style.setProperty(\"position\", \"fixed\", \"important\");\n        element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n        element.style.setProperty(\"top\", \"0\", \"important\");\n        element.style.setProperty(\"left\", \"0\", \"important\");\n        element.style.setProperty(\"width\", \"100%\", \"important\");\n        element.style.setProperty(\"height\", \"100%\", \"important\");\n      } else if (originalStyle) {\n        element.style.position = originalStyle.position;\n        element.style.zIndex = originalStyle.zIndex;\n        element.style.top = originalStyle.top;\n        element.style.left = originalStyle.left;\n        element.style.width = originalStyle.width;\n        element.style.height = originalStyle.height;\n      }\n\n      for (var key in options.style) {\n        if (!key || !options.style) {\n          continue;\n        }\n\n        var value = options.style[key];\n\n        if (!value) {\n          continue;\n        }\n\n        element.style.setProperty(key, value, \"important\");\n      }\n    }\n  }, {\n    key: \"paintBase\",\n    value: function paintBase(baseColor) {\n      var _this5 = this;\n\n      this.draw(function (ctx) {\n        _paintBase(ctx, _this5.size, baseColor);\n      });\n    }\n  }]);\n\n  return Canvas;\n}();\n_Canvas_context = new WeakMap();","map":{"version":3,"names":["__classPrivateFieldSet","receiver","state","value","kind","f","TypeError","has","call","set","__classPrivateFieldGet","get","_Canvas_context","clear","drawParticle","drawParticlePlugin","drawPlugin","paintBase","getStyleFromHsl","getStyleFromRgb","rangeColorToHsl","rangeColorToRgb","deepExtend","generatedAttribute","Canvas","container","size","height","width","generatedCanvas","resize","initStyle","initCover","initTrail","initBackground","paint","canvas","_a","element","remove","dataset","originalStyle","style","offsetHeight","offsetWidth","getContext","retina","init","draw","ctx","options","actualOptions","backgroundMask","enable","cover","coverColorStyle","trail","particles","move","length","trailFillColor","needsRefresh","updateActualOptions","setDensity","plugins","plugin","undefined","refresh","pxRatio","pixelRatio","newSize","oldSize","Object","assign","started","resizeFactor","particle","delta","_b","_c","_d","_e","_f","spawning","destroyed","radius","getRadius","pfColor","getFillColor","psColor","getStrokeColor","getPluginParticleColors","fColor","sColor","zIndexOptions","zIndex","zOpacityFactor","zIndexFactor","opacityRate","opacity","bubble","strokeOpacity","stroke","zOpacity","zStrokeOpacity","colorStyles","fill","zSizeFactor","sizeRate","updaters","updater","beforeDraw","getColorStyles","composite","shadow","afterDraw","background","elementStyle","color","backgroundColor","backgroundImage","image","backgroundPosition","position","backgroundRepeat","repeat","backgroundSize","cb","coverRgb","coverColor","r","g","b","a","fillColor","particleFillColor","particleStrokeColor","fullScreen","setProperty","toString","top","left","key","baseColor","WeakMap"],"sources":["/Users/palash/web development/portfolio/node_modules/tsparticles-engine/esm/Core/Canvas.js"],"sourcesContent":["var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _Canvas_context;\nimport { clear, drawParticle, drawParticlePlugin, drawPlugin, paintBase } from \"../Utils/CanvasUtils\";\nimport { getStyleFromHsl, getStyleFromRgb, rangeColorToHsl, rangeColorToRgb } from \"../Utils/ColorUtils\";\nimport { deepExtend } from \"../Utils/Utils\";\nimport { generatedAttribute } from \"./Utils/Constants\";\nexport class Canvas {\n    constructor(container) {\n        this.container = container;\n        _Canvas_context.set(this, void 0);\n        this.size = {\n            height: 0,\n            width: 0,\n        };\n        __classPrivateFieldSet(this, _Canvas_context, null, \"f\");\n        this.generatedCanvas = false;\n    }\n    init() {\n        this.resize();\n        this.initStyle();\n        this.initCover();\n        this.initTrail();\n        this.initBackground();\n        this.paint();\n    }\n    loadCanvas(canvas) {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.generatedCanvas =\n            canvas.dataset && generatedAttribute in canvas.dataset\n                ? canvas.dataset[generatedAttribute] === \"true\"\n                : this.generatedCanvas;\n        this.element = canvas;\n        this.originalStyle = deepExtend({}, this.element.style);\n        this.size.height = canvas.offsetHeight;\n        this.size.width = canvas.offsetWidth;\n        __classPrivateFieldSet(this, _Canvas_context, this.element.getContext(\"2d\"), \"f\");\n        this.container.retina.init();\n        this.initBackground();\n    }\n    destroy() {\n        var _a;\n        if (this.generatedCanvas) {\n            (_a = this.element) === null || _a === void 0 ? void 0 : _a.remove();\n        }\n        this.draw((ctx) => {\n            clear(ctx, this.size);\n        });\n    }\n    paint() {\n        const options = this.container.actualOptions;\n        this.draw((ctx) => {\n            if (options.backgroundMask.enable && options.backgroundMask.cover) {\n                clear(ctx, this.size);\n                this.paintBase(this.coverColorStyle);\n            }\n            else {\n                this.paintBase();\n            }\n        });\n    }\n    clear() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail;\n        if (options.backgroundMask.enable) {\n            this.paint();\n        }\n        else if (trail.enable && trail.length > 0 && this.trailFillColor) {\n            this.paintBase(getStyleFromRgb(this.trailFillColor, 1 / trail.length));\n        }\n        else {\n            this.draw((ctx) => {\n                clear(ctx, this.size);\n            });\n        }\n    }\n    async windowResize() {\n        if (!this.element) {\n            return;\n        }\n        this.resize();\n        const container = this.container, needsRefresh = container.updateActualOptions();\n        container.particles.setDensity();\n        for (const [, plugin] of container.plugins) {\n            if (plugin.resize !== undefined) {\n                plugin.resize();\n            }\n        }\n        if (needsRefresh) {\n            await container.refresh();\n        }\n    }\n    resize() {\n        if (!this.element) {\n            return;\n        }\n        const container = this.container, pxRatio = container.retina.pixelRatio, size = container.canvas.size, newSize = {\n            width: this.element.offsetWidth * pxRatio,\n            height: this.element.offsetHeight * pxRatio,\n        };\n        if (newSize.height === size.height &&\n            newSize.width === size.width &&\n            newSize.height === this.element.height &&\n            newSize.width === this.element.width) {\n            return;\n        }\n        const oldSize = Object.assign({}, size);\n        this.element.width = size.width = this.element.offsetWidth * pxRatio;\n        this.element.height = size.height = this.element.offsetHeight * pxRatio;\n        if (this.container.started) {\n            this.resizeFactor = {\n                width: size.width / oldSize.width,\n                height: size.height / oldSize.height,\n            };\n        }\n    }\n    drawParticle(particle, delta) {\n        var _a, _b, _c, _d, _e, _f;\n        if (particle.spawning || particle.destroyed) {\n            return;\n        }\n        const radius = particle.getRadius();\n        if (radius <= 0) {\n            return;\n        }\n        const pfColor = particle.getFillColor(), psColor = (_a = particle.getStrokeColor()) !== null && _a !== void 0 ? _a : pfColor;\n        if (!pfColor && !psColor) {\n            return;\n        }\n        let [fColor, sColor] = this.getPluginParticleColors(particle);\n        if (!fColor || !sColor) {\n            if (!fColor) {\n                fColor = pfColor ? pfColor : undefined;\n            }\n            if (!sColor) {\n                sColor = psColor ? psColor : undefined;\n            }\n        }\n        const options = this.container.actualOptions, zIndexOptions = particle.options.zIndex, zOpacityFactor = (1 - particle.zIndexFactor) ** zIndexOptions.opacityRate, opacity = (_d = (_b = particle.bubble.opacity) !== null && _b !== void 0 ? _b : (_c = particle.opacity) === null || _c === void 0 ? void 0 : _c.value) !== null && _d !== void 0 ? _d : 1, strokeOpacity = (_f = (_e = particle.stroke) === null || _e === void 0 ? void 0 : _e.opacity) !== null && _f !== void 0 ? _f : opacity, zOpacity = opacity * zOpacityFactor, zStrokeOpacity = strokeOpacity * zOpacityFactor;\n        const colorStyles = {\n            fill: fColor ? getStyleFromHsl(fColor, zOpacity) : undefined,\n        };\n        colorStyles.stroke = sColor ? getStyleFromHsl(sColor, zStrokeOpacity) : colorStyles.fill;\n        this.draw((ctx) => {\n            const zSizeFactor = (1 - particle.zIndexFactor) ** zIndexOptions.sizeRate, container = this.container;\n            for (const updater of container.particles.updaters) {\n                if (updater.beforeDraw) {\n                    updater.beforeDraw(particle);\n                }\n                if (updater.getColorStyles) {\n                    const { fill, stroke } = updater.getColorStyles(particle, ctx, radius, zOpacity);\n                    if (fill) {\n                        colorStyles.fill = fill;\n                    }\n                    if (stroke) {\n                        colorStyles.stroke = stroke;\n                    }\n                }\n            }\n            drawParticle(container, ctx, particle, delta, colorStyles, options.backgroundMask.enable, options.backgroundMask.composite, radius * zSizeFactor, zOpacity, particle.options.shadow);\n            for (const updater of container.particles.updaters) {\n                if (updater.afterDraw) {\n                    updater.afterDraw(particle);\n                }\n            }\n        });\n    }\n    drawPlugin(plugin, delta) {\n        this.draw((ctx) => {\n            drawPlugin(ctx, plugin, delta);\n        });\n    }\n    drawParticlePlugin(plugin, particle, delta) {\n        this.draw((ctx) => {\n            drawParticlePlugin(ctx, plugin, particle, delta);\n        });\n    }\n    initBackground() {\n        const options = this.container.actualOptions, background = options.background, element = this.element, elementStyle = element === null || element === void 0 ? void 0 : element.style;\n        if (!elementStyle) {\n            return;\n        }\n        if (background.color) {\n            const color = rangeColorToRgb(background.color);\n            elementStyle.backgroundColor = color ? getStyleFromRgb(color, background.opacity) : \"\";\n        }\n        else {\n            elementStyle.backgroundColor = \"\";\n        }\n        elementStyle.backgroundImage = background.image || \"\";\n        elementStyle.backgroundPosition = background.position || \"\";\n        elementStyle.backgroundRepeat = background.repeat || \"\";\n        elementStyle.backgroundSize = background.size || \"\";\n    }\n    draw(cb) {\n        if (!__classPrivateFieldGet(this, _Canvas_context, \"f\")) {\n            return;\n        }\n        return cb(__classPrivateFieldGet(this, _Canvas_context, \"f\"));\n    }\n    initCover() {\n        const options = this.container.actualOptions, cover = options.backgroundMask.cover, color = cover.color, coverRgb = rangeColorToRgb(color);\n        if (coverRgb) {\n            const coverColor = {\n                r: coverRgb.r,\n                g: coverRgb.g,\n                b: coverRgb.b,\n                a: cover.opacity,\n            };\n            this.coverColorStyle = getStyleFromRgb(coverColor, coverColor.a);\n        }\n    }\n    initTrail() {\n        const options = this.container.actualOptions, trail = options.particles.move.trail, fillColor = rangeColorToRgb(trail.fillColor);\n        if (fillColor) {\n            const trail = options.particles.move.trail;\n            this.trailFillColor = {\n                r: fillColor.r,\n                g: fillColor.g,\n                b: fillColor.b,\n                a: 1 / trail.length,\n            };\n        }\n    }\n    getPluginParticleColors(particle) {\n        let fColor, sColor;\n        for (const [, plugin] of this.container.plugins) {\n            if (!fColor && plugin.particleFillColor) {\n                fColor = rangeColorToHsl(plugin.particleFillColor(particle));\n            }\n            if (!sColor && plugin.particleStrokeColor) {\n                sColor = rangeColorToHsl(plugin.particleStrokeColor(particle));\n            }\n            if (fColor && sColor) {\n                break;\n            }\n        }\n        return [fColor, sColor];\n    }\n    initStyle() {\n        const element = this.element, options = this.container.actualOptions;\n        if (!element) {\n            return;\n        }\n        const originalStyle = this.originalStyle;\n        if (options.fullScreen.enable) {\n            this.originalStyle = deepExtend({}, element.style);\n            element.style.setProperty(\"position\", \"fixed\", \"important\");\n            element.style.setProperty(\"z-index\", options.fullScreen.zIndex.toString(10), \"important\");\n            element.style.setProperty(\"top\", \"0\", \"important\");\n            element.style.setProperty(\"left\", \"0\", \"important\");\n            element.style.setProperty(\"width\", \"100%\", \"important\");\n            element.style.setProperty(\"height\", \"100%\", \"important\");\n        }\n        else if (originalStyle) {\n            element.style.position = originalStyle.position;\n            element.style.zIndex = originalStyle.zIndex;\n            element.style.top = originalStyle.top;\n            element.style.left = originalStyle.left;\n            element.style.width = originalStyle.width;\n            element.style.height = originalStyle.height;\n        }\n        for (const key in options.style) {\n            if (!key || !options.style) {\n                continue;\n            }\n            const value = options.style[key];\n            if (!value) {\n                continue;\n            }\n            element.style.setProperty(key, value, \"important\");\n        }\n    }\n    paintBase(baseColor) {\n        this.draw((ctx) => {\n            paintBase(ctx, this.size, baseColor);\n        });\n    }\n}\n_Canvas_context = new WeakMap();\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}