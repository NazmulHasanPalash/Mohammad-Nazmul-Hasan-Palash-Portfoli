{"ast":null,"code":"import _classCallCheck from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/palash/web development/nazmul-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\n\nfunction updateTilt(particle, delta) {\n  var _a, _b;\n\n  if (!particle.tilt || !particle.options.tilt) {\n    return;\n  }\n\n  var tilt = particle.options.tilt,\n      tiltAnimation = tilt.animation,\n      speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n      max = 2 * Math.PI,\n      decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case 0:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n\n  if (particle.tilt.velocity && decay !== 1) {\n    particle.tilt.velocity *= decay;\n  }\n}\n\nexport var TiltUpdater = /*#__PURE__*/function () {\n  function TiltUpdater(container) {\n    _classCallCheck(this, TiltUpdater);\n\n    this.container = container;\n  }\n\n  _createClass(TiltUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var _a;\n\n      var tiltOptions = particle.options.tilt;\n\n      if (!tiltOptions) {\n        return;\n      }\n\n      particle.tilt = {\n        enable: tiltOptions.enable,\n        value: getRangeValue(tiltOptions.value) * Math.PI / 180,\n        sinDirection: Math.random() >= 0.5 ? 1 : -1,\n        cosDirection: Math.random() >= 0.5 ? 1 : -1\n      };\n      var tiltDirection = tiltOptions.direction;\n\n      if (tiltDirection === \"random\") {\n        var index = Math.floor(Math.random() * 2);\n        tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n      }\n\n      switch (tiltDirection) {\n        case \"counter-clockwise\":\n        case \"counterClockwise\":\n          particle.tilt.status = 1;\n          break;\n\n        case \"clockwise\":\n          particle.tilt.status = 0;\n          break;\n      }\n\n      var tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n\n      if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n        particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n        particle.tilt.velocity = getRangeValue(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n        if (!tiltAnimation.sync) {\n          particle.tilt.velocity *= Math.random();\n        }\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var _a;\n\n      var tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n      return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateTilt(particle, delta);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n\n        if (!(source === null || source === void 0 ? void 0 : source.tilt)) {\n          continue;\n        }\n\n        if (!options.tilt) {\n          options.tilt = new Tilt();\n        }\n\n        options.tilt.load(source.tilt);\n      }\n    }\n  }]);\n\n  return TiltUpdater;\n}();","map":{"version":3,"names":["getRangeValue","Tilt","updateTilt","particle","delta","_a","_b","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","TiltUpdater","container","tiltOptions","sinDirection","random","cosDirection","tiltDirection","direction","index","floor","retina","reduceFactor","sync","destroyed","spawning","isEnabled","sources","source","load"],"sources":["/Users/palash/web development/nazmul-portfolio/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js"],"sourcesContent":["import { getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n    loadOptions(options, ...sources) {\n        for (const source of sources) {\n            if (!(source === null || source === void 0 ? void 0 : source.tilt)) {\n                continue;\n            }\n            if (!options.tilt) {\n                options.tilt = new Tilt();\n            }\n            options.tilt.load(source.tilt);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}