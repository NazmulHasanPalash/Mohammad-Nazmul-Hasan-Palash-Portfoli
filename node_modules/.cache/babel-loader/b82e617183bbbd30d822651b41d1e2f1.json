{"ast":null,"code":"import _classCallCheck from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/palash/web development/portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\n\nfunction updateRoll(particle, delta) {\n  var roll = particle.options.roll;\n\n  if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n    return;\n  }\n\n  var speed = particle.roll.speed * delta.factor,\n      max = 2 * Math.PI;\n  particle.roll.angle += speed;\n\n  if (particle.roll.angle > max) {\n    particle.roll.angle -= max;\n  }\n}\n\nexport var RollUpdater = /*#__PURE__*/function () {\n  function RollUpdater() {\n    _classCallCheck(this, RollUpdater);\n  }\n\n  _createClass(RollUpdater, [{\n    key: \"init\",\n    value: function init(particle) {\n      var rollOpt = particle.options.roll;\n\n      if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n        particle.roll = {\n          enable: rollOpt.enable,\n          horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n          vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n          angle: Math.random() * Math.PI * 2,\n          speed: getRangeValue(rollOpt.speed) / 360\n        };\n\n        if (rollOpt.backColor) {\n          particle.backColor = rangeColorToHsl(rollOpt.backColor);\n        } else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n          var alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n          particle.roll.alter = {\n            type: alterType,\n            value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value)\n          };\n        } else if (rollOpt.darken.enable) {\n          particle.roll.alter = {\n            type: \"darken\",\n            value: getRangeValue(rollOpt.darken.value)\n          };\n        } else if (rollOpt.enlighten.enable) {\n          particle.roll.alter = {\n            type: \"enlighten\",\n            value: getRangeValue(rollOpt.enlighten.value)\n          };\n        }\n      } else {\n        particle.roll = {\n          enable: false,\n          horizontal: false,\n          vertical: false,\n          angle: 0,\n          speed: 0\n        };\n      }\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled(particle) {\n      var roll = particle.options.roll;\n      return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n  }, {\n    key: \"update\",\n    value: function update(particle, delta) {\n      if (!this.isEnabled(particle)) {\n        return;\n      }\n\n      updateRoll(particle, delta);\n    }\n  }, {\n    key: \"loadOptions\",\n    value: function loadOptions(options) {\n      for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        sources[_key - 1] = arguments[_key];\n      }\n\n      for (var _i = 0, _sources = sources; _i < _sources.length; _i++) {\n        var source = _sources[_i];\n\n        if (!(source === null || source === void 0 ? void 0 : source.roll)) {\n          continue;\n        }\n\n        if (!options.roll) {\n          options.roll = new Roll();\n        }\n\n        options.roll.load(source.roll);\n      }\n    }\n  }]);\n\n  return RollUpdater;\n}();","map":{"version":3,"names":["getRangeValue","rangeColorToHsl","Roll","updateRoll","particle","delta","roll","options","enable","speed","factor","max","Math","PI","angle","RollUpdater","rollOpt","horizontal","mode","vertical","random","backColor","darken","enlighten","alterType","alter","type","value","destroyed","spawning","isEnabled","sources","source","load"],"sources":["/Users/palash/web development/portfolio/node_modules/tsparticles-updater-roll/esm/RollUpdater.js"],"sourcesContent":["import { getRangeValue, rangeColorToHsl } from \"tsparticles-engine\";\nimport { Roll } from \"./Options/Classes/Roll\";\nfunction updateRoll(particle, delta) {\n    const roll = particle.options.roll;\n    if (!particle.roll || !(roll === null || roll === void 0 ? void 0 : roll.enable)) {\n        return;\n    }\n    const speed = particle.roll.speed * delta.factor, max = 2 * Math.PI;\n    particle.roll.angle += speed;\n    if (particle.roll.angle > max) {\n        particle.roll.angle -= max;\n    }\n}\nexport class RollUpdater {\n    init(particle) {\n        const rollOpt = particle.options.roll;\n        if (rollOpt === null || rollOpt === void 0 ? void 0 : rollOpt.enable) {\n            particle.roll = {\n                enable: rollOpt.enable,\n                horizontal: rollOpt.mode === \"horizontal\" || rollOpt.mode === \"both\",\n                vertical: rollOpt.mode === \"vertical\" || rollOpt.mode === \"both\",\n                angle: Math.random() * Math.PI * 2,\n                speed: getRangeValue(rollOpt.speed) / 360,\n            };\n            if (rollOpt.backColor) {\n                particle.backColor = rangeColorToHsl(rollOpt.backColor);\n            }\n            else if (rollOpt.darken.enable && rollOpt.enlighten.enable) {\n                const alterType = Math.random() >= 0.5 ? \"darken\" : \"enlighten\";\n                particle.roll.alter = {\n                    type: alterType,\n                    value: getRangeValue(alterType === \"darken\" ? rollOpt.darken.value : rollOpt.enlighten.value),\n                };\n            }\n            else if (rollOpt.darken.enable) {\n                particle.roll.alter = {\n                    type: \"darken\",\n                    value: getRangeValue(rollOpt.darken.value),\n                };\n            }\n            else if (rollOpt.enlighten.enable) {\n                particle.roll.alter = {\n                    type: \"enlighten\",\n                    value: getRangeValue(rollOpt.enlighten.value),\n                };\n            }\n        }\n        else {\n            particle.roll = {\n                enable: false,\n                horizontal: false,\n                vertical: false,\n                angle: 0,\n                speed: 0,\n            };\n        }\n    }\n    isEnabled(particle) {\n        const roll = particle.options.roll;\n        return !particle.destroyed && !particle.spawning && !!(roll === null || roll === void 0 ? void 0 : roll.enable);\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateRoll(particle, delta);\n    }\n    loadOptions(options, ...sources) {\n        for (const source of sources) {\n            if (!(source === null || source === void 0 ? void 0 : source.roll)) {\n                continue;\n            }\n            if (!options.roll) {\n                options.roll = new Roll();\n            }\n            options.roll.load(source.roll);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}