{"ast":null,"code":"import { getRangeValue } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\n\nfunction updateTilt(particle, delta) {\n  var _a, _b;\n\n  if (!particle.tilt || !particle.options.tilt) {\n    return;\n  }\n\n  const tilt = particle.options.tilt,\n        tiltAnimation = tilt.animation,\n        speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor,\n        max = 2 * Math.PI,\n        decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n\n  if (!tiltAnimation.enable) {\n    return;\n  }\n\n  switch (particle.tilt.status) {\n    case 0:\n      particle.tilt.value += speed;\n\n      if (particle.tilt.value > max) {\n        particle.tilt.value -= max;\n      }\n\n      break;\n\n    case 1:\n    default:\n      particle.tilt.value -= speed;\n\n      if (particle.tilt.value < 0) {\n        particle.tilt.value += max;\n      }\n\n      break;\n  }\n\n  if (particle.tilt.velocity && decay !== 1) {\n    particle.tilt.velocity *= decay;\n  }\n}\n\nexport class TiltUpdater {\n  constructor(container) {\n    this.container = container;\n  }\n\n  init(particle) {\n    var _a;\n\n    const tiltOptions = particle.options.tilt;\n\n    if (!tiltOptions) {\n      return;\n    }\n\n    particle.tilt = {\n      enable: tiltOptions.enable,\n      value: getRangeValue(tiltOptions.value) * Math.PI / 180,\n      sinDirection: Math.random() >= 0.5 ? 1 : -1,\n      cosDirection: Math.random() >= 0.5 ? 1 : -1\n    };\n    let tiltDirection = tiltOptions.direction;\n\n    if (tiltDirection === \"random\") {\n      const index = Math.floor(Math.random() * 2);\n      tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n    }\n\n    switch (tiltDirection) {\n      case \"counter-clockwise\":\n      case \"counterClockwise\":\n        particle.tilt.status = 1;\n        break;\n\n      case \"clockwise\":\n        particle.tilt.status = 0;\n        break;\n    }\n\n    const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n\n    if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n      particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n      particle.tilt.velocity = getRangeValue(tiltAnimation.speed) / 360 * this.container.retina.reduceFactor;\n\n      if (!tiltAnimation.sync) {\n        particle.tilt.velocity *= Math.random();\n      }\n    }\n  }\n\n  isEnabled(particle) {\n    var _a;\n\n    const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n    return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n  }\n\n  update(particle, delta) {\n    if (!this.isEnabled(particle)) {\n      return;\n    }\n\n    updateTilt(particle, delta);\n  }\n\n  loadOptions(options) {\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n\n    for (const source of sources) {\n      if (!(source === null || source === void 0 ? void 0 : source.tilt)) {\n        continue;\n      }\n\n      if (!options.tilt) {\n        options.tilt = new Tilt();\n      }\n\n      options.tilt.load(source.tilt);\n    }\n  }\n\n}","map":{"version":3,"names":["getRangeValue","Tilt","updateTilt","particle","delta","_a","_b","tilt","options","tiltAnimation","animation","speed","velocity","factor","max","Math","PI","decay","enable","status","value","TiltUpdater","constructor","container","init","tiltOptions","sinDirection","random","cosDirection","tiltDirection","direction","index","floor","retina","reduceFactor","sync","isEnabled","destroyed","spawning","update","loadOptions","sources","source","load"],"sources":["/Users/palash/web development/portfolio/node_modules/tsparticles-updater-tilt/esm/TiltUpdater.js"],"sourcesContent":["import { getRangeValue, } from \"tsparticles-engine\";\nimport { Tilt } from \"./Options/Classes/Tilt\";\nfunction updateTilt(particle, delta) {\n    var _a, _b;\n    if (!particle.tilt || !particle.options.tilt) {\n        return;\n    }\n    const tilt = particle.options.tilt, tiltAnimation = tilt.animation, speed = ((_a = particle.tilt.velocity) !== null && _a !== void 0 ? _a : 0) * delta.factor, max = 2 * Math.PI, decay = (_b = particle.tilt.decay) !== null && _b !== void 0 ? _b : 1;\n    if (!tiltAnimation.enable) {\n        return;\n    }\n    switch (particle.tilt.status) {\n        case 0:\n            particle.tilt.value += speed;\n            if (particle.tilt.value > max) {\n                particle.tilt.value -= max;\n            }\n            break;\n        case 1:\n        default:\n            particle.tilt.value -= speed;\n            if (particle.tilt.value < 0) {\n                particle.tilt.value += max;\n            }\n            break;\n    }\n    if (particle.tilt.velocity && decay !== 1) {\n        particle.tilt.velocity *= decay;\n    }\n}\nexport class TiltUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    init(particle) {\n        var _a;\n        const tiltOptions = particle.options.tilt;\n        if (!tiltOptions) {\n            return;\n        }\n        particle.tilt = {\n            enable: tiltOptions.enable,\n            value: (getRangeValue(tiltOptions.value) * Math.PI) / 180,\n            sinDirection: Math.random() >= 0.5 ? 1 : -1,\n            cosDirection: Math.random() >= 0.5 ? 1 : -1,\n        };\n        let tiltDirection = tiltOptions.direction;\n        if (tiltDirection === \"random\") {\n            const index = Math.floor(Math.random() * 2);\n            tiltDirection = index > 0 ? \"counter-clockwise\" : \"clockwise\";\n        }\n        switch (tiltDirection) {\n            case \"counter-clockwise\":\n            case \"counterClockwise\":\n                particle.tilt.status = 1;\n                break;\n            case \"clockwise\":\n                particle.tilt.status = 0;\n                break;\n        }\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        if (tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable) {\n            particle.tilt.decay = 1 - getRangeValue(tiltAnimation.decay);\n            particle.tilt.velocity = (getRangeValue(tiltAnimation.speed) / 360) * this.container.retina.reduceFactor;\n            if (!tiltAnimation.sync) {\n                particle.tilt.velocity *= Math.random();\n            }\n        }\n    }\n    isEnabled(particle) {\n        var _a;\n        const tiltAnimation = (_a = particle.options.tilt) === null || _a === void 0 ? void 0 : _a.animation;\n        return !particle.destroyed && !particle.spawning && !!(tiltAnimation === null || tiltAnimation === void 0 ? void 0 : tiltAnimation.enable);\n    }\n    update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateTilt(particle, delta);\n    }\n    loadOptions(options, ...sources) {\n        for (const source of sources) {\n            if (!(source === null || source === void 0 ? void 0 : source.tilt)) {\n                continue;\n            }\n            if (!options.tilt) {\n                options.tilt = new Tilt();\n            }\n            options.tilt.load(source.tilt);\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}